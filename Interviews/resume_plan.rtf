{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue10;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c99942\c98555\c0;\cssrgb\c100000\c100000\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Freelancer\
\
Atria Healthcare Web Application:\
\
Requirement: A simple website advertising the company, it\'92s services, location and contact details. Users who visit the company should be able to contact the company\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 Front End:\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 * Customised UI template to advertise services offered by company and contact details\
* Styled the website along with UX/UI team for responsive design for different screen sizes\
* Purchased domain and hosting service to host the site\
* Integrated logic in JavaScript using Fetch API to connect to backend API for Appointment Booking\
* Enabled HTTPS for secure access to the site\
\
Back End:\
* Architected, designed and developed API backend for handling UI requests for appointment booking\
* Developed persistence logic using Spring JPA and PostgreSQL for persisting appointment bookings\
* Developed E-Mail logic using events to send emails to company representatives (front desk).\
* Developed E-Mail logic to send well formatted HTML acknowledgements to Customer\
* CI-CD pipeline with automated deployment is setup to build and deploy to Heroku PaaS when incremental changes are push to GitHub\
\
VIC Care:\
Requirement: A user friendly registration form for customers with details relevant for service sought and notifications to company for quick revertion. Improved look and feel for website. Sight is not secure.\
\
Front End:\
* Designed registration form using wire-framing tool draw.io, theme selection and UX design using sketch tool\
* Integrated bootstrap and customised using CSS for responsive design for different screen sizes\
* Integrated location search logic using asynchronous fetch API with Google location search API to enable location search\
* Integration registration form with Wordpress site using custom workpress plugins\
* Styled website using new theme, colour combinations and fonts to revamp the look and feel of the website\
* Fixed insecure site issue by identifying and migration certain content that was previously hosted using http URLs instead of on https URLs\
\
Backend\
* Integrated custom PHP code using wordpress plugin for email notifications whenever a visitor registers through registration form\
* Wordpress plugin enables customising backend to write persistence logic to persist user data in external database\
\
Technical Skills:\

\b Concepts:
\b0  Object Oriented Programming Principles (OOPs), SOLID Design Principles, Design Patterns, Architectural Patterns, Architectural Quality Attributes, functional programming concepts, Test Driven Development (TDD), Behaviour Driven Development (BDD), Kruchten 4+1 architectural view model, TOGAF enterprise architectural framework (beginner), microservices architecture concepts, event driven architecture\

\b Languages:
\b0  Java 8+ & 7, XML & XSD, UML 2, Python 3.x, HTML5 (learning), CSS3 (learning), JavaScript - ES6 (learning), SQL, Linux command-line tools, Bash, Ruby (used in the past), Perl (used in the past)\

\b Frameworks:
\b0  Spring 4.x, Spring Boot 2.x, \cb2 Spring Cloud\cb1 , Hibernate 4.x, React JS (beginner), React-Native (beginner), Express JS (beginner)\

\b Technologies:
\b0  JaxRS, JaxWS, JDBC, JPA, JMS, JaxB, JaxP, Docker, \cb2 Kubernetes\cb1 \

\b API Design Tools:
\b0  Swagger\

\b CMS:
\b0  WordPress (beginner)\

\b Version Control Tools:
\b0  Subversion, Git, GitHub, Bitbucket\

\b Testing Tools / Libraries:
\b0  Mockito, PowerMock\

\b Build Tools:
\b0  Apache Maven 3, Apache ANT (used in the past), \cb2 Gradle\cb1 \

\b Continuous Integration & Deployment Tools:
\b0  Atlassian Bamboo, Jenkins, uDeploy\

\b Project Management Tools:
\b0  Jira, Trello\

\b Platforms:
\b0  Linux (Ubuntu, Centos), Windows (10, 7, XP, 2012 R2 Server, 2003 Server)\

\b Cloud Computing Platforms:
\b0  Amazon AWS, Heroku (PaaS)\

\b Artefact Repositories:
\b0  Artefactory, Nexus\

\b Code Quality Analysis Tools:
\b0  SonarLint, SonarQube, SonarCloud\

\b Security Vulnerabilities Scanning Tools:
\b0  HP Fortify\

\b Environments:
\b0  Node.js (used in the past, learning)\

\b Persistence Tools:
\b0  MySQL, PostgreSQL, \cb2 MongoDB\cb3 , Elasticsearch, \cb2 Redis\cb1 \
}