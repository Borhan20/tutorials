{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww12500\viewh13860\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1. Figure out your end goal\
	1. Work for a big company, startup, freelance?\
		1. Work in big company (funds starting new company)\
		2. Freelance (funds starting new company)\
		3. Start a company\
	2. Web development (frontend/ backend), gaming, data science, mobile apps?\
	3. What are you naturally good at?\
		1. Good at math? Data science (Machine learning), low level programming\
		2. Visual? Web, mobile or desktop apps\
	4. Check pay scales, job security, etc for different types of dev jobs\
		1. Glassdoor, \
		2. \'85\
2. Choose a programming language\
	1. Figure out which language you should learn for what you want to do\
		1. Mobile - Swift/ Java, Game - C++, Web: HTML, CSS, JS, PHP or Python\
	2. Fundamentals first! (Save frameworks, etc for later)\
		1. Learn programming languages first\
		2. Learn computer science fundamentals first\
	3. Choose a text editor/ IDE and get comfortable with it\
		1. VS Code\
		2. Eclipse/IntelliJ\
	4. You can always switch or learn another language\
3. Find resources and build a curriculum\
	1. Books: Great for learning language fundamentals\
	2. Documentation: Best used for reference\
	3. Resource Websites: W3Schools, MDN Web Docs\
	4. Video Courses, YouTube, Udemy, Pluralsight, Lynda, Coursera, etc\'85\
	5. Online Bootcamps: Freecodecamp, Codeacademy, Team Treehouse\
	6. Challenge Websites: Codewars\
}